services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: poketex
      POSTGRES_PASSWORD: desene123
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  stablediffusion:
    build: ./stablediffusion
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8081:8081
    networks:
      - postgres
    restart: unless-stopped


  pokemoncatalog:
    build: ./pokemoncatalog
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8084:8084
    networks:
      - postgres
    restart: unless-stopped

  comment:
    build: ./comment
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8086:8086
    networks:
      - postgres
    restart: unless-stopped

  chatgpt:
    build: ./chatgpt
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8088:8088
    networks:
      - postgres
    restart: unless-stopped

  breeding:
    build: ./breeding
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8089:8089
    networks:
      - postgres
    restart: unless-stopped



networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:
